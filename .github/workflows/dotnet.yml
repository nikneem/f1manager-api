name: .NET

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  compile-api:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x
      - name: Restore dependencies
        run: dotnet restore ./src
      - name: Build
        run: dotnet build ./src --no-restore
      - name: Test
        run: dotnet test ./src --no-build --verbosity normal
      - name: Publish
        run: dotnet publish ./src/F1Manager.Api/F1Manager.Api.csproj -c Release -o ./published --no-restore --nologo
      - name: Zip Folder
        run: zip -r artifact.zip ./published/*
      - name: Publish Artifact
        uses: actions/upload-artifact@v2
        with:
          name: api-artifact
          path: artifact.zip

  compile-migrations:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x
      - name: Restore dependencies
        run: dotnet restore ./src/F1Manager.Migrations/F1Manager.Migrations.csproj
      - name: Build
        run: dotnet build ./src/F1Manager.Migrations/F1Manager.Migrations.csproj -c Release -o ./migrations-artifact
      - name: Publish Artifact
        uses: actions/upload-artifact@v2
        with:
          name: migrations-artifact
          path: ./migrations-artifact

  publish-bicep:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Compile infrastructure
        uses: Azure/cli@1.0.4
        with:
          azcliversion: 2.33.1
          inlineScript: az bicep build --file ./infrastructure/main.bicep
      - name: Publish Artifact
        uses: actions/upload-artifact@v2
        with:
          name: bicep-templates
          path: infrastructure/*.json

  infrastructure-incremental-dev:
    needs: publish-bicep
    runs-on: windows-latest
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: bicep-templates
          path: ./infrastructure
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_DEV }}
      - uses: azure/arm-deploy@v1
        with:
          scope: subscription
          region: westeurope
          template: ./infrastructure/main.json
          parameters: ./infrastructure/parameters.dev.json

  deploy-api-dev:
    needs: [compile-api, infrastructure-incremental-dev]
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: api-artifact
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_DEV }}
      - name: Get Web App publish profile
        id: publishprofile
        uses: aliencube/publish-profile-actions@v1
        env:
          AZURE_CREDENTIALS: ${{ secrets.AZURE_DEV }}
        with:
          resourceGroupName: ${{ secrets.AZURE_DEV_RESOURCE_GROUP }}
          appName: "f1man-api-dev-weu-app"
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_DEV }}
      - name: "Deploy web app"
        uses: azure/webapps-deploy@v2
        with:
          app-name: "f1man-api-dev-weu-app"
          publish-profile: ${{ steps.publishprofile.outputs.profile }}
          package: "artifact.zip"
      - name: Check the deployed service URL
        uses: jtalk/url-health-check-action@v1.5
        with:
          url: https://f1man-api-dev-weu-app.azurewebsites.net/health
          follow-redirect: no
          max-attempts: 3
          retry-delay: 5s

  # migrate-sql-database:
  #   needs: [compile-migrations, infrastructure-incremental-dev]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Download Artifact
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: migrations-artifact
  #     - name: Setup .NET
  #       uses: actions/setup-dotnet@v1
  #       with:
  #         dotnet-version: 6.0.x
  #     - name: Azure Login
  #       uses: azure/login@v1
  #       with:
  #         creds: ${{ secrets.AZURE_DEV }}

  #     - uses: Azure/get-keyvault-secrets@v1
  #       with:
  #         keyvault: "f1man-deploytime-kv"
  #         secrets: "SqlServerPassword"
  #       id: myGetSecretAction

  #     - name: Get secrets
  #       id: getsecretsdevmig
  #       uses: Azure/get-keyvault-secrets@v1
  #       with:
  #         keyvault: "f1man-deploytime-kv"
  #         secrets: "SqlServerPassword"
  #     - name: Get Public IP address
  #       id: ip
  #       uses: haythem/public-ip@v1.2
  #     - name: Register IP address in FW
  #       uses: Azure/cli@1.0.4
  #       with:
  #         azcliversion: 2.23.0
  #         inlineScript: az sql server firewall-rule create --start-ip-address "${{ steps.ip.outputs.ipv4 }}" --end-ip-address "${{ steps.ip.outputs.ipv4 }}" --name "Github Action Runner" --resource-group ${{ secrets.AZURE_DEV_RESOURCE_GROUP }} --server "f1man-api-dev-weu-sql"
  #     - name: Execute database migrations
  #       run: |
  #         chmod 777 ./Migrations
  #         ./Migrations migrate -n "f1man-api-dev-weu-sqldb" -s "f1man-api-dev-weu-sql" -u "phfqommi7mbwg" -p ${{ steps.getsecretsdevmig.outputs.SqlServerPassword }}
